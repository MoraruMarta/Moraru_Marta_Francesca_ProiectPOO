#include <iostream>
using namespace std;

class Flamingo {
public:
    int greutate;
    static int regiune;
    const string clasa ;
    int* specimene;
    string specimen;

    // Constructor implicit
    Flamingo() : greutate(20), specimen("Ionel") {
        this->specimene = new int[this->greutate];
        for (int i = 0; i < this->greutate; i++) {
            this->specimene[i] = 100 + i;
        }
    }

    // Constructor cu parametri pentru greutate și specimen
    Flamingo(int greutate, string specimen) : greutate(greutate), specimen(specimen) {
        this->specimene = new int[this->greutate];
        for (int i = 0; i < this->greutate; i++) {
            this->specimene[i] = 200 + i;
        }
    }

    // Constructor cu toți parametrii
    Flamingo(int greutate, string clasa, string specimen, int* specimene) :
        greutate(greutate),clasa(clasa), specimen(specimen) {
        this->specimene = new int[this->greutate];
        for (int i = 0; i < this->greutate; i++) {
            this->specimene[i] = specimene[i];
        }
    }

    // Destructor pentru a elibera memoria alocată dinamic
    ~Flamingo() {
        delete[] specimene;
    }

    void afisare() {
        cout << "Greutate: " << this->greutate << "\nRegiune: " << this->regiune << "\nClasa: " << this->clasa
            << "\nSpecimen: " << this->specimen << "\nSpecimene: ";
        for (int i = 0; i < this->greutate - 1; i++) {
            cout << this->specimene[i] << ", ";
        }
        cout << this->specimene[this->greutate - 1] << endl;
    }

    static void setRegiune(int valoare) {
        regiune = valoare;
    }
};


int Flamingo::regiune = 1;

class SanctuarFlamingo {
public:
    string nume;
    static string pretBilet;
    const int anInfiintare = 2005;
    int* varste;

    // Constructor implicit
    SanctuarFlamingo() : nume("Sanctuarul Flamingo") {
        this->varste = new int[10];
        for (int i = 0; i < 10; i++) {
            this->varste[i] = 5 + i;
        }
    }

    // Constructor cu parametri pentru nume și prețul biletului
    SanctuarFlamingo(string nume) : nume(nume) {
        this->varste = new int[10];
        for (int i = 0; i < 10; i++) {
            this->varste[i] = 10 + i;
        }
    }

    // Destructor pentru a elibera memoria alocată dinamic
    ~SanctuarFlamingo() {
        delete[] varste;
    }

    void afisare() {
        cout << "Nume Sanctuar: " << this->nume << "\nPret Bilet: " << this->pretBilet << "\nAn Infiintare: "
            << this->anInfiintare << "\nVarste Păsări: ";
        for (int i = 0; i < 9; i++) {
            cout << this->varste[i] << ", ";
        }
        cout << this->varste[9] << endl;
    }

    static void setPretBilet(string pret) {
        pretBilet = pret;
    }
};

string SanctuarFlamingo::pretBilet = "15 RON";

class FlamencoRoz {
public:
    string nume;
    static string zona;
    const string specie = "Phoenicopteridae";
    int* varsta;

    // Constructor implicit
    FlamencoRoz() : nume("Flamenco Roz") {
        this->varsta = new int[8];
        for (int i = 0; i < 8; i++) {
            this->varsta[i] = 2 + i;
        }
    }

    // Constructor cu parametri pentru nume și zonă
    FlamencoRoz(string nume, string zona) : nume(nume) {
        this->varsta = new int[8];
        for (int i = 0; i < 8; i++) {
            this->varsta[i] = 5 + i;
        }
    }

    // Destructor pentru a elibera memoria alocată dinamic
    ~FlamencoRoz() {
        delete[] varsta;
    }

    void afisare() {
        cout << "Nume: " << this->nume << "\nZona de Origine: " << this->zona << "\nSpecie: " << this->specie
            << "\nVarsta: ";
        for (int i = 0; i < 7; i++) {
            cout << this->varsta[i] << ", ";
        }
        cout << this->varsta[7] << endl;
    }

    static void setZona(string newZona) {
        zona = newZona;
    }
};

string FlamencoRoz::zona = "America Centrală";

int main() {
    // Obiecte pentru clasele definite
    Flamingo f1;
    Flamingo::setRegiune(2);
    int* specimene = new int[5];
    for (int i = 0; i < 5; i++) {
        specimene[i] = (i * 2) + 1;
    }
    Flamingo f2(24, "Ancuta");
    

    SanctuarFlamingo sanctuar1;
    SanctuarFlamingo::setPretBilet("25 RON");
    int* varsteSanctuar = new int[10];
    for (int i = 0; i < 10; i++) {
        varsteSanctuar[i] = 8 + i;
    }
    

    FlamencoRoz flamenco1;
    FlamencoRoz::setZona("America de Sud");
    int* varstaFlamenco = new int[8];
    for (int i = 0; i < 8; i++) {
        varstaFlamenco[i] = 3 + i;
    }
    FlamencoRoz flamenco2("Flamenco Argintiu", "America de Nord");

    // Afișare atributele obiectelor
    f1.afisare();
    f2.afisare();
   
    sanctuar1.afisare();
   
    flamenco1.afisare();
    flamenco2.afisare();

    // Eliberarea memoriei alocate dinamic
    delete[] specimene;
    delete[] varsteSanctuar;
    delete[] varstaFlamenco;

    return 0;
}
